pre code.hljs {
  display: block;
  overflow-x: auto;
  padding: 1em
}
code.hljs {
  padding: 3px 5px
}
/*!
  Theme: Zenburn
  Author: elnawe
  License: ~ MIT (or more permissive) [via base16-schemes-source]
  Maintainer: @highlightjs/core-team
  Version: 2021.09.0
*/
/*
  WARNING: DO NOT EDIT THIS FILE DIRECTLY.

  This theme file was auto-generated from the Base16 scheme zenburn
  by the Highlight.js Base16 template builder.

  - https://github.com/highlightjs/base16-highlightjs
*/
/*
base00  #383838  Default Background
base01  #404040  Lighter Background (Used for status bars, line number and folding marks)
base02  #606060  Selection Background
base03  #6f6f6f  Comments, Invisibles, Line Highlighting
base04  #808080  Dark Foreground (Used for status bars)
base05  #dcdccc  Default Foreground, Caret, Delimiters, Operators
base06  #c0c0c0  Light Foreground (Not often used)
base07  #ffffff  Light Background (Not often used)
base08  #dca3a3  Variables, XML Tags, Markup Link Text, Markup Lists, Diff Deleted
base09  #dfaf8f  Integers, Boolean, Constants, XML Attributes, Markup Link Url
base0A  #e0cf9f  Classes, Markup Bold, Search Text Background
base0B  #5f7f5f  Strings, Inherited Class, Markup Code, Diff Inserted
base0C  #93e0e3  Support, Regular Expressions, Escape Characters, Markup Quotes
base0D  #7cb8bb  Functions, Methods, Attribute IDs, Headings
base0E  #dc8cc3  Keywords, Storage, Selector, Markup Italic, Diff Changed
base0F  #000000  Deprecated, Opening/Closing Embedded Language Tags, e.g. <?php ?>
*/
pre code.hljs {
  display: block;
  overflow-x: auto;
  padding: 1em
}
code.hljs {
  padding: 3px 5px
}
.hljs {
  color: #dcdccc;
  background: #383838
}
.hljs::selection,
.hljs ::selection {
  background-color: #606060;
  color: #dcdccc
}
/* purposely do not highlight these things */
.hljs-formula,
.hljs-params,
.hljs-property {
  
}
/* base03 - #6f6f6f -  Comments, Invisibles, Line Highlighting */
.hljs-comment {
  color: #6f6f6f
}
/* base04 - #808080 -  Dark Foreground (Used for status bars) */
.hljs-tag {
  color: #808080
}
/* base05 - #dcdccc -  Default Foreground, Caret, Delimiters, Operators */
.hljs-subst,
.hljs-punctuation,
.hljs-operator {
  color: #dcdccc
}
.hljs-operator {
  opacity: 0.7
}
/* base08 - Variables, XML Tags, Markup Link Text, Markup Lists, Diff Deleted */
.hljs-bullet,
.hljs-variable,
.hljs-template-variable,
.hljs-selector-tag,
.hljs-name,
.hljs-deletion {
  color: #dca3a3
}
/* base09 - Integers, Boolean, Constants, XML Attributes, Markup Link Url */
.hljs-symbol,
.hljs-number,
.hljs-link,
.hljs-attr,
.hljs-variable.constant_,
.hljs-literal {
  color: #dfaf8f
}
/* base0A - Classes, Markup Bold, Search Text Background */
.hljs-title,
.hljs-class .hljs-title,
.hljs-title.class_ {
  color: #e0cf9f
}
.hljs-strong {
  font-weight: bold;
  color: #e0cf9f
}
/* base0B - Strings, Inherited Class, Markup Code, Diff Inserted */
.hljs-code,
.hljs-addition,
.hljs-title.class_.inherited__,
.hljs-string {
  color: #5f7f5f
}
/* base0C - Support, Regular Expressions, Escape Characters, Markup Quotes */
/* guessing */
.hljs-built_in,
.hljs-doctag,
.hljs-quote,
.hljs-keyword.hljs-atrule,
.hljs-regexp {
  color: #93e0e3
}
/* base0D - Functions, Methods, Attribute IDs, Headings */
.hljs-function .hljs-title,
.hljs-attribute,
.ruby .hljs-property,
.hljs-title.function_,
.hljs-section {
  color: #7cb8bb
}
/* base0E - Keywords, Storage, Selector, Markup Italic, Diff Changed */
/* .hljs-selector-id, */
/* .hljs-selector-class, */
/* .hljs-selector-attr, */
/* .hljs-selector-pseudo, */
.hljs-type,
.hljs-template-tag,
.diff .hljs-meta,
.hljs-keyword {
  color: #dc8cc3
}
.hljs-emphasis {
  color: #dc8cc3;
  font-style: italic
}
/* base0F - Deprecated, Opening/Closing Embedded Language Tags, e.g. <?php ?> */
/*
  prevent top level .keyword and .string scopes
  from leaking into meta by accident
*/
.hljs-meta,
.hljs-meta .hljs-keyword,
.hljs-meta .hljs-string {
  color: #000000
}
/* for v10 compatible themes */
.hljs-meta .hljs-keyword,
.hljs-meta-keyword {
  font-weight: bold
}

.container {
  display: flex; /* 启用Flex布局 */
  justify-content: space-between; /* 水平间距分配，使两个区块左右分布 */
  align-items: center; /* 垂直居中对齐内容 */
  width: 100%;
}

#left, #right {
  /* 移除之前的浮动和行内块设置，因为Flex布局不再需要这些 */
  margin: 10px 0;
  width: 50%; /* 保持宽度不变 */
  font-size: 0.85em;
  line-height: 1.5;
  text-align: center; /* 保持文本居中 */
}

/* 定义绿色文本的样式 */
.green-text {
  color: rgb(60, 255, 0);
}
.image-container {
  display: flex;
  justify-content: center;
  align-items: center;
}
.image-container p {
  margin: 0 10px;
}
.centered {
  text-align: center;
}
img {
  /* width: 300px; */
  height: auto;
  cursor: pointer;
  transition: transform 0.3s ease-in-out;
}
img.zoomed {
  transform: scale(2);
  z-index: 10;
  position: relative;
}

.summary-title {
  display: block;
  text-align: center;
  margin-bottom: 1em; /* 可选，增加与后续内容的间距 */
}


.table-container {
  width: 100%; /* 你可以调整这个百分比来缩小表格 */
  margin: auto; /* 使表格居中 */
  font-size: 0.6em; /* 使字体变小 */
}
table {
  width: 100%;
  border-collapse: collapse;
  border-bottom: 1px solid rgb(0, 0, 0);
}
th, td {
  border: 1px solid rgb(0, 0, 0);
  padding: 8px;
  text-align: center;
}
.image-grid {
  display: grid; /* 使用Grid布局 */
  grid-template-columns: repeat(2, auto); /* 根据需要定义列数，这里是两列 */
  justify-content: center; /* 水平居中 */
  align-items: center; /* 垂直居中，根据需要可选 */
  gap: 10px; /* 图片间的间距，按需调整 */
}

.image-and-text {
  display: flex;
  align-items: center; /* 垂直居中对齐，根据需要调整 */
  justify-content: center;/* 添加这项以实现水平居中，当项目是单行时有效，如果是多行内容要实现水平居中，这可能不适用 */
  gap: 15px; /* 图片与文字之间的间距 */
}

.vertical-text {
  font-size: 0.6em; /* 使字体变小 */
  writing-mode: vertical-rl; /* 设置文字竖向排列，从右向左 */
  text-orientation: upright; /* 保持文字正向，而不是旋转 */
}

.content-wrapper {
  display: flex; /* 使用Flex布局 */
  align-items: center; /* 垂直居中对齐 */
}

/* 确保图片紧靠左侧 */
.content-wrapper p {
  margin-right: auto; /* 自动计算右侧边距，使图片靠左 */
  margin-bottom: 0; /* 如果需要，可以移除底部外边距以保持紧密 */
}

/* 诗文内容部分 */
.content-wrapper .poem {
  flex: 1; /* 允许该部分占据剩余空间，使内容靠右 */
  text-align: justify; /* 如果需要，可以使诗文内容两端对齐 */
  /* 根据需要调整其他样式，例如字体大小、颜色等 */
}

.content-wrapper p img {
  margin-right: 40px; /* 增加了图片右边距 */
}

/* 定义红色字体样式 */
.highlighted {
  color: red;
}


/* 图片左右轮播 */
.carousel-container {
  overflow: hidden; /* 隐藏超出部分 */
  width: 100%; /* 根据需要调整宽度 */
  height: 400px; /* 根据图片高度调整 */
  position: relative;
}

.carousel-slides {
  display: flex; /* 使用Flex布局 */
  width: calc(100% * 2); /* 宽度设置为两倍，以实现循环效果 */
  animation: slide-left 20s linear infinite; /* 动画名称、持续时间、速度曲线、循环次数 */
}

.carousel-slides img {
  width: 400px; /* 每张图片的宽度 */
  margin-right: 15px; /* 图片间隔 */
}

.carousel-slides .clone {
  display: flex; /* 使用Flex布局 */
    width: 400px; /* 每张图片的宽度 */
}

@keyframes slide-left {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(calc(-100% / 2)); /* 移动一半的宽度 */
  }
}

.up-down {
  overflow: hidden;
  width: 100%; 
  height: 100%;
  position: relative;
  display: flex;
  align-items: center;
}

.up-down-slides {
  display: flex;
  flex-direction: column; /* 垂直方向 */
  animation: slide-up 120s linear infinite; /* 动画时长根据图片数量调整 */
  align-items: center; 
}

.up-down-slides img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

@keyframes slide-up {
  0% {
    transform: translateY(0);
  }
  80% {
    transform: translateY(-400%); /* 根据实际图片数量调整 */
  }
  100% {
    transform: translateY(0); /* 立即重置位置 */
  }
}

:root {
  --num-of-images: 3; /* 手动设置图片数量 */
}


.invention-arrow svg {
  width: 100px; /* Adjust to fit your design */
  height: 100px; /* Adjust to fit your design */
  fill: rgba(0, 0, 0, 0.5); /* Semi-transparent black, adjust as needed */
  transition: fill 0.5s ease; /* Smooth transition effect */
}

/* Optional: Change color on hover */
.invention-arrow svg:hover {
  fill: rgba(0, 0, 0, 1); /* Solid black, adjust as needed */
}


